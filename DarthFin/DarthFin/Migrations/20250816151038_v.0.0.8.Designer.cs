// <auto-generated />
using System;
using DarthFin.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DarthFin.Migrations
{
    [DbContext(typeof(Database))]
    [Migration("20250816151038_v.0.0.8")]
    partial class v008
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DarthFin.DB.Entities.CategoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CAT_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CAT_Name");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CAT_Parent_CAT_Id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("CAT_USR_Id");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("CAT_Categories");
                });

            modelBuilder.Entity("DarthFin.DB.Entities.FileEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FIL_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("FIL_Content");

                    b.Property<bool>("IsProcessed")
                        .HasColumnType("bit")
                        .HasColumnName("FIL_Is_Processed");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FIL_Name");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("FIL_USR_Id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("FIL_Files");
                });

            modelBuilder.Entity("DarthFin.DB.Entities.FinEntryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FIN_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FIN_Account");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("FIN_Prices");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FIN_Comment");

                    b.Property<string>("Correspondent")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FIN_Company");

                    b.Property<string>("DocumentNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FIN_Document_Number");

                    b.Property<DateTime?>("EntryDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("FIN_Entry_Date");

                    b.Property<int>("EntryType")
                        .HasColumnType("int")
                        .HasColumnName("FIN_Entry_Type");

                    b.Property<string>("ExternalId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FIN_External_Id");

                    b.Property<int>("FromFileId")
                        .HasColumnType("int")
                        .HasColumnName("FIN_FIL_Id");

                    b.Property<string>("Information")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FIN_Information");

                    b.Property<bool?>("IsExpense")
                        .HasColumnType("bit")
                        .HasColumnName("FIN_Is_Expense");

                    b.Property<DateTime?>("RealDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("FIN_Real_Date");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("FIN_USR_Id");

                    b.HasKey("Id");

                    b.HasIndex("FromFileId");

                    b.ToTable("FIN_Entries");
                });

            modelBuilder.Entity("DarthFin.DB.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("USR_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Gmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USR_Gmail");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit")
                        .HasColumnName("USR_Is_Admin");

                    b.HasKey("Id");

                    b.ToTable("ADM_Users");
                });

            modelBuilder.Entity("DarthFin.DB.Entities.CategoryEntity", b =>
                {
                    b.HasOne("DarthFin.DB.Entities.CategoryEntity", "ParentCategory")
                        .WithMany()
                        .HasForeignKey("ParentCategoryId");

                    b.HasOne("DarthFin.DB.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("ParentCategory");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DarthFin.DB.Entities.FileEntity", b =>
                {
                    b.HasOne("DarthFin.DB.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DarthFin.DB.Entities.FinEntryEntity", b =>
                {
                    b.HasOne("DarthFin.DB.Entities.FileEntity", "FromFile")
                        .WithMany()
                        .HasForeignKey("FromFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromFile");
                });
#pragma warning restore 612, 618
        }
    }
}
